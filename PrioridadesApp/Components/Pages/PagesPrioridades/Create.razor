@page "/P_Create"

@inject PrioridadesBLL prioridadesBLL
@rendermode InteractiveServer


<EditForm Model="prioridad" OnValidSubmit="Crear">
    <div class="card">
        <div class="card-header">
            <h1>Registro Prioridad</h1>

            <div class="d-flex align-items-start ">
                <a href="/details"><em>Detalles</em></a>
            </div>


        </div>

        <div class="card-body">
            <label>ID:</label>
            <div class="input-group">
                <InputNumber @bind-Value="prioridad.PriodidadID" class="id-input"></InputNumber>
                <button type="button" class="bi bi-binoculars-fill" @onclick="Buscar"></button>
            </div>
            <div>
                <label>Descripci&oacute;n:</label>
                <InputText @bind-Value="prioridad.Descripcion" class="form-control"></InputText>
                <ValidationMessage For="@(() => prioridad.Descripcion)" />
                @if (Existe)
                {
                    <p class="text-danger">Ya existe una Prioridad con esta descripción.</p>
                }
            </div>
            <div>
                <label>Dias compromiso:</label>
                <InputNumber @bind-Value="prioridad.DiasComprometidos" class="form-control"></InputNumber>
                <ValidationMessage For="@(() => prioridad.DiasComprometidos)" />
                @if (prioridad.DiasComprometidos <= 0)
                {
                    <p class="text-danger">Agregue una Cantidad de Dias Comprometidos.</p>
                }
            </div>
        </div>
        <div class="card-footer">
            
            <button type="submit" class="btn btn-success">Crear <i class="bi bi-floppy-fill" /></button>
          
        </div>
    </div>
</EditForm>


@code {

    public Prioridades prioridad { get; set; } = new Prioridades();
    private bool Existe = false;

    public async Task Buscar()
    {
        var prioridadEncontrada = await prioridadesBLL.Buscar(prioridad.PriodidadID);
        if (prioridadEncontrada != null)
        {
            this.prioridad = prioridadEncontrada;
        }
    }

    void Nuevo()
    {
        this.prioridad = new Prioridades();
    }

    public async Task<bool> Validar()
    {
        Existe = (await prioridadesBLL.GetList(p => p.Descripcion!.ToLower() == prioridad.Descripcion!.ToLower()
         && p.PriodidadID != prioridad.PriodidadID)).Any();
        return Existe;
    }

    public async Task Crear()
    {
        if (await Validar())
        {
            return;
        }
        if (await prioridadesBLL.Crear(this.prioridad))
        {
            this.Nuevo();
        }
    }
}
